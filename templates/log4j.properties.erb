# managed by puppet
schema-registry.logs.dir=<%= scope.lookupvar('confluent_schema_registry::app_log_dir') %>

log4j.rootLogger=INFO, stdout

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c:%L)%n

log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.maxBackupIndex=10
log4j.appender.file.maxFileSize=100MB
log4j.appender.file.File=${schema-registry.logs.dir}/schema-registry.log
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=[%d] %p %m (%c)%n

log4j.logger.kafka=<%= scope.lookupvar('confluent_schema_registry::kafka_loglevel') %>, file
log4j.logger.org.apache.zookeeper=<%= scope.lookupvar('confluent_schema_registry::apache_zookeeper_loglevel') %>, file
log4j.logger.org.apache.kafka=<%= scope.lookupvar('confluent_schema_registry::apache_kafka_loglevel') %>, file
log4j.logger.org.I0Itec.zkclient=<%= scope.lookupvar('confluent_schema_registry::zkclient_loglevel') %>, file
log4j.logger.kafka.consumer.ZookeeperConsumerConnector=<%= scope.lookupvar('confluent_schema_registry::consumer_connector_loglevel') %>, file
log4j.additivity.kafka.server=false
log4j.additivity.kafka.consumer.ZookeeperConsumerConnector=false
